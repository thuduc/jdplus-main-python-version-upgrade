[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "jdemetra-py"
version = "0.1.0"
description = "Python implementation of JDemetra+ seasonal adjustment framework"
readme = "README.md"
authors = [
    {name = "JDemetra+ Team"},
]
license = {text = "EUPL-1.2"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Mathematics",
    "License :: OSI Approved :: European Union Public Licence 1.2 (EUPL 1.2)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
keywords = ["time series", "seasonal adjustment", "statistics", "econometrics", "tramoseats", "x13"]
requires-python = ">=3.12"
dependencies = [
    "numpy>=2.0,<3",
    "pandas>=2.2,<3",
    "scipy>=1.12,<2",
    "statsmodels>=0.14,<1",
    "matplotlib>=3.8,<4",
    "seaborn>=0.13,<1",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-xdist>=2.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.950",
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "nbsphinx>=0.8",
    "ipykernel>=6.0",
]
performance = [
    "numba>=0.59,<1",
]
all = [
    "jdemetra-py[dev,performance]",
]

[project.urls]
Homepage = "https://github.com/jdemetra/jdplus-python"
Documentation = "https://jdemetra-py.readthedocs.io"
Repository = "https://github.com/jdemetra/jdplus-python"
Issues = "https://github.com/jdemetra/jdplus-python/issues"

[tool.setuptools]
packages = ["jdemetra_py"]

[tool.setuptools.package-data]
jdemetra_py = ["*.txt", "*.md"]

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
testpaths = [
    "jdemetra_py/tests",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "numpy.*",
    "scipy.*",
    "statsmodels.*",
    "matplotlib.*",
    "seaborn.*",
    "numba.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["jdemetra_py"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true